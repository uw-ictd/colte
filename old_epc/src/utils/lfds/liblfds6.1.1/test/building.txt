building test
=============

Windows (user-mode)
===================
1. Use Microsoft Visual Studio 2008 or Visual C++ 2008 Express Edition (or
   later versions) to load "liblfds.sln".  The "Win32" platform is x86,
   the "x64" platform is x64.  The test programme provides the "Release"
   and "Debug" targets.  The other targets ("Release DLL", "Release Lib",
   "Debug DLL" and "Debug Lib") are carried over will-nilly from the liblds
   library.

   All builds will work, but DLL builds will require the DLL from liblfds
   to be placed into a location where the test executable can find it (e.g.
   the same directory).

2. Use Microsoft Windows SDK and GNUmake to run makefile.windows (obviously
   you'll need to have run setenv.bat or the appropriate vcvars*.bat first;
   you can build for x64/64-bit and x86/32-bit - just run the correct batch
   file).

   If liblfds has been built as a DLL, the DLL from liblfds needs to be
   placed into a location where the test executable can find it (e.g. the
   same directory).

   Targets are "rel", "dbg" and "clean".  You need to clean between switching
   targets.

Windows (kernel)
================
No build supported, since this is a command line utility.

Linux
=====
Use GNUmake to run "makefile.linux".  Targets are "rel", "dbg" and
"clean".  You need to clean between switching targets.

If liblfds has been built as a shared object, the shared object file from
liblfds will need to be placed somewhere the text executable can find it.

A convenient solution is to place the shared object file in the same
directory as the text executable and set the environment variable
"LD_LIBRARY_PATH" to ".", e.g. in bash;

export LD_LIBRARY_PATH=.

Remember to unset after finishing testing, or your system will continue
to scan the current directory for shared object files.

unset LD_LIBRARY_PATH

