# step 0: clear database? any configs needed?

    - name: install pip
      apt:
        name: python-pip
      become: yes

    - name: install django
      pip:
        name: "{{ item }}"
      with_items:
      - django
      - django-ipware

# step 1: dynamically populate registry.service (IF NEEDED?!?)
    - name: dynamically write registry.service
      lineinfile:
        path: "{{ emergency_dir }}/registry/registry.service"
        regexp: "{{ item.field }}"
        line: "{{ item.line }}"
        owner: "{{ username }}"
        group: "{{ username }}"
      with_items:
      - {field: "ExecStart", line: "ExecStart=/bin/bash -c \"python {{ emergency_dir }}/registry/manage.py runserver 9083 >> /var/log/colte/emergencell_registry.log 2>&1\""}
      - {field: "User", line: "User={{ username }}"}
      - {field: "Group", line: "Group={{ username }}"}
      - {field: "WorkingDirectory", line: "WorkingDirectory={{ emergency_dir }}/registry"}

    - name: copy registry.service to /etc/systemd/system
      copy: 
        src: "{{ emergency_dir }}/registry/registry.service"
        dest: "/etc/systemd/system/emergencell_registry.service"
        mode: 0644
      become: yes

    - name: start registry via systemd
      systemd: state=started name=emergencell_registry
      become: yes

    - name: copy website configuration file
      copy:
        src: "{{ emergency_dir }}/registry.conf"
        dest: "/etc/nginx/sites-available/registry"
      become: yes

    - name: symlink website into sites-enabled
      file:
        src: "/etc/nginx/sites-available/registry"
        dest: "/etc/nginx/sites-enabled/registry"
        state: link
      become: yes

    - name: restart nginx
      service: name=nginx state=reloaded
      become: yes

