# This script is to be run on the actual host machine (i.e. no Vagrant BS here.)
# It installs/configures Apache and Docker, then sets up and turns on all the services one-by-one
# If you don't want a specific webservice just comment out the appropriate include_tasks.yml file

---
- hosts: localhost
  vars:
    coltenv: "{{ ansible_env.COLTENV }}"
    build_emergency: "{{ ansible_env.COLTE_EMERGENCY_WEBSERVICES }}"
    username: "{{ ansible_env.COLTE_USER }}"
    # mysql_password: "{{ ansible_env.COLTE_DBPASS }}"
    colte_dir: "{{ ansible_env.COLTE_DIR }}"
    emergency_webservices_dir: "{{ colte_dir }}/emergency_webservices"

  tasks:
    - name: check for environment vars
      fail: msg="Killing ansible script, environment variables not set! COLTENV = {{ ansible_env.COLTENV }}"
      when: coltenv is not defined
        
    - name: apt-get update
      apt:
        update_cache: yes
        cache_valid_time: 3600
      become: yes

    # TASK ONE: make sure bind is installed already

    # TASK TWO: install/config a BIND zone for ".emergency"
    - name: copy emergency zone pointer into named.conf.local
      blockinfile:
        path: "/etc/bind/named.conf.local"
        block: |
          zone "emergency" {
            type master;
            file "/etc/bind/zones/db.emergency";
          };
      become: yes

    - name: copy bind zonefile
      copy: 
        src: "{{ emergency_webservices_dir }}/zone_db"
        dest: "/etc/bind/zones/db.emergency"
      become: yes

    - name: restart bind9
      service: name=bind9 state=restarted
      become: yes

    # TASK THREE: make sure nginx is already installed and configured
    # (if not, run nginx script)

# INSTALLING DOCKER:
# (since stretch, apt-get docker doesn't work anymore so we have to manual install)
#    - name: apt-get docker-compose
#      apt:
#        name: docker-compose
#      become: yes
  
#    - name: manually download/install docker deb
#      apt: 
#        deb: https://download.docker.com/linux/debian/dists/stretch/pool/stable/amd64/docker-ce_17.03.0~ce-0~debian-stretch_amd64.deb
#      become: yes

# To add a webservice/website, create a new .yml file and add to this list!
    - include_tasks: "{{ emergency_webservices_dir }}/homepage.yml"
    # - include_tasks: "{{ emergency_webservices_dir }}/registry.yml"
    # - include_tasks: "{{ emergency_webservices_dir }}/rocketchat.yml"
    # - include_tasks: "{{ emergency_webservices_dir }}/xowa.yml"
    # - include_tasks: "{{ emergency_webservices_dir }}/maps.yml"

    # - name: turn everything off
    #   service: name=apache2 state=stopped
    #   become: yes

  # handlers:
  #   - name: restart apache
  #     service: name=apache2 state=restarted
  #     become: yes

  #   - name: reload apache
  #     service: name=apache2 state=reloaded
  #     become: yes
