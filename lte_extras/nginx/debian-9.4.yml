---
- hosts: localhost
  vars:
    coltenv: "{{ ansible_env.COLTENV }}"
    username: "{{ ansible_env.COLTE_USER }}"
    colte_dir: "{{ ansible_env.COLTE_DIR }}"
    network_name: "{{ ansible_env.COLTE_NETWORK_NAME }}"
    nginx_dir: "{{ colte_dir }}/lte_extras/nginx"

  tasks:
    - name: check for environment vars
      fail: msg= "Killing ansible script, environment variables not set! COLTENV = {{ ansible_env.COLTENV }}"
      when: coltenv is not defined

    - name: stop apache2 sevice (IMPORTANT BEFORE INSTALLING nginx)
      service: name=apache2 state=stopped
      become: yes

    - name: apt-get nginx
      apt:
        name: "{{ item }}"
      become: yes
      with_items:
      - nginx

    - name: write information to webgui.conf
      lineinfile:
        path: "{{ nginx_dir }}/webgui.conf"
        regexp: "{{ item.field }}"
        line: "{{ item.line }}"
      with_items:
      - {field: "server_name", line: "  server_name network.{{ network_name }};"}

    - name: copy website configuration file
      copy:
        src: "{{ nginx_dir }}/webgui.conf"
        dest: "/etc/nginx/sites-available/webgui"
      become: yes

    - name: symlink website into sites-enabled
      file:
        src: "/etc/nginx/sites-available/webgui"
        dest: "/etc/nginx/sites-enabled/webgui"
        state: link
      become: yes

    - name: remove default nginx website (or server will not launch)
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: yes

      # normally just have to issue a "reloaded" but this is better practice
      # given that we also just installed nginx from apache
    - name: restart nginx
      service: name=nginx state=restarted
      become: yes

