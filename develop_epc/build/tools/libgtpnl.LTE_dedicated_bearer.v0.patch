diff -rcNP libgtpnl.orig/include/libgtpnl/gtp.h libgtpnl/include/libgtpnl/gtp.h
*** libgtpnl.orig/include/libgtpnl/gtp.h	2017-02-10 09:32:01.348220254 +0100
--- libgtpnl/include/libgtpnl/gtp.h	2017-02-08 12:06:59.938085386 +0100
***************
*** 12,17 ****
--- 12,18 ----
  void gtp_tunnel_set_ifidx(struct gtp_tunnel *t, uint32_t ifidx);
  void gtp_tunnel_set_ms_ip4(struct gtp_tunnel *t, struct in_addr *ms_addr);
  void gtp_tunnel_set_sgsn_ip4(struct gtp_tunnel *t, struct in_addr *sgsn_addr);
+ void gtp_tunnel_set_bearer_id(struct gtp_tunnel *t, uint8_t bearer_id);
  void gtp_tunnel_set_version(struct gtp_tunnel *t, uint32_t version);
  void gtp_tunnel_set_tid(struct gtp_tunnel *t, uint64_t tid);
  void gtp_tunnel_set_i_tei(struct gtp_tunnel *t, uint32_t i_tei);
***************
*** 22,27 ****
--- 23,29 ----
  const uint32_t gtp_tunnel_get_ifidx(struct gtp_tunnel *t);
  const struct in_addr *gtp_tunnel_get_ms_ip4(struct gtp_tunnel *t);
  const struct in_addr *gtp_tunnel_get_sgsn_ip4(struct gtp_tunnel *t);
+ const uint8_t gtp_tunnel_get_bearer_id(struct gtp_tunnel *t);
  int gtp_tunnel_get_version(struct gtp_tunnel *t);
  uint64_t gtp_tunnel_get_tid(struct gtp_tunnel *t);
  uint32_t gtp_tunnel_get_i_tei(struct gtp_tunnel *t);
diff -rcNP libgtpnl.orig/include/linux/gtp.h libgtpnl/include/linux/gtp.h
*** libgtpnl.orig/include/linux/gtp.h	2017-02-10 09:32:01.360220099 +0100
--- libgtpnl/include/linux/gtp.h	2017-02-08 15:30:38.365141235 +0100
***************
*** 20,30 ****
  	GTPA_VERSION,
  	GTPA_TID,	/* for GTPv0 only */
  	GTPA_SGSN_ADDRESS,
! 	GTPA_MS_ADDRESS,
  	GTPA_FLOW,
  	GTPA_NET_NS_FD,
  	GTPA_I_TEI,	/* for GTPv1 only */
  	GTPA_O_TEI,	/* for GTPv1 only */
  	GTPA_PAD,
  	__GTPA_MAX,
  };
--- 20,31 ----
  	GTPA_VERSION,
  	GTPA_TID,	/* for GTPv0 only */
  	GTPA_SGSN_ADDRESS,
!   GTPA_MS_ADDRESS,
  	GTPA_FLOW,
  	GTPA_NET_NS_FD,
  	GTPA_I_TEI,	/* for GTPv1 only */
  	GTPA_O_TEI,	/* for GTPv1 only */
+ 	GTPA_BEARER_ID, /* for GTPv1 only */
  	GTPA_PAD,
  	__GTPA_MAX,
  };
diff -rcNP libgtpnl.orig/src/gtp.c libgtpnl/src/gtp.c
*** libgtpnl.orig/src/gtp.c	2017-02-10 09:32:01.364220048 +0100
--- libgtpnl/src/gtp.c	2017-02-10 10:13:39.122448713 +0100
***************
*** 66,75 ****
  
  void gtp_tunnel_set_sgsn_ip4(struct gtp_tunnel *t, struct in_addr *sgsn_addr)
  {
! 	t->sgsn_addr = *sgsn_addr;
  }
  EXPORT_SYMBOL(gtp_tunnel_set_sgsn_ip4);
  
  void gtp_tunnel_set_version(struct gtp_tunnel *t, uint32_t version)
  {
  	t->gtp_version = version;
--- 66,81 ----
  
  void gtp_tunnel_set_sgsn_ip4(struct gtp_tunnel *t, struct in_addr *sgsn_addr)
  {
!   t->sgsn_addr = *sgsn_addr;
  }
  EXPORT_SYMBOL(gtp_tunnel_set_sgsn_ip4);
  
+ void gtp_tunnel_set_bearer_id(struct gtp_tunnel *t, uint8_t bearer_id)
+ {
+   t->bearer_id = bearer_id;
+ }
+ EXPORT_SYMBOL(gtp_tunnel_set_bearer_id);
+ 
  void gtp_tunnel_set_version(struct gtp_tunnel *t, uint32_t version)
  {
  	t->gtp_version = version;
***************
*** 124,129 ****
--- 130,141 ----
  }
  EXPORT_SYMBOL(gtp_tunnel_get_sgsn_ip4);
  
+ const uint8_t gtp_tunnel_get_bearer_id(struct gtp_tunnel *t)
+ {
+   return t->bearer_id;
+ }
+ EXPORT_SYMBOL(gtp_tunnel_get_bearer_id);
+ 
  int gtp_tunnel_get_version(struct gtp_tunnel *t)
  {
  	return t->gtp_version;
diff -rcNP libgtpnl.orig/src/gtp-genl.c libgtpnl/src/gtp-genl.c
*** libgtpnl.orig/src/gtp-genl.c	2017-02-10 09:32:01.364220048 +0100
--- libgtpnl/src/gtp-genl.c	2017-02-10 10:41:16.236932072 +0100
***************
*** 56,61 ****
--- 56,62 ----
  	} else if (t->gtp_version == GTP_V1) {
  		mnl_attr_put_u32(nlh, GTPA_I_TEI, t->u.v1.i_tei);
  		mnl_attr_put_u32(nlh, GTPA_O_TEI, t->u.v1.o_tei);
+ 		mnl_attr_put_u32(nlh, GTPA_BEARER_ID, t->bearer_id);
  	}
  }
  
***************
*** 112,117 ****
--- 113,119 ----
  	} u;
  	struct in_addr	sgsn_addr;
  	struct in_addr	ms_addr;
+ 	uint8_t		bearer_id;
  };
  
  static int genl_gtp_validate_cb(const struct nlattr *attr, void *data)
***************
*** 123,128 ****
--- 125,136 ----
  		return MNL_CB_OK;
  
  	switch(type) {
+ 	case GTPA_BEARER_ID:
+ 		if (mnl_attr_validate(attr, MNL_TYPE_U8) < 0) {
+ 			perror("mnl_attr_validate");
+ 			return MNL_CB_ERROR;
+ 		}
+ 		break;
  	case GTPA_TID:
  		if (mnl_attr_validate(attr, MNL_TYPE_U64) < 0) {
  			perror("mnl_attr_validate");
***************
*** 167,172 ****
--- 175,183 ----
  	if (tb[GTPA_MS_ADDRESS]) {
  		pdp.ms_addr.s_addr = mnl_attr_get_u32(tb[GTPA_MS_ADDRESS]);
  	}
+ 	if (tb[GTPA_BEARER_ID]) {
+ 		pdp.bearer_id = mnl_attr_get_u8(tb[GTPA_BEARER_ID]);
+ 	}
  	if (tb[GTPA_VERSION]) {
  		pdp.version = mnl_attr_get_u32(tb[GTPA_VERSION]);
  	}
***************
*** 178,185 ****
  		       pdp.u.v0.tid, buf);
  	} else if (pdp.version == GTP_V1) {
  		inet_ntop(AF_INET, &pdp.ms_addr, buf, sizeof(buf));
! 		printf("tei %u/%u ms_addr %s ", pdp.u.v1.i_tei,
! 		       pdp.u.v1.o_tei, buf);
  	}
  	inet_ntop(AF_INET, &pdp.sgsn_addr, buf, sizeof(buf));
  	printf("sgsn_addr %s\n", buf);
--- 189,196 ----
  		       pdp.u.v0.tid, buf);
  	} else if (pdp.version == GTP_V1) {
  		inet_ntop(AF_INET, &pdp.ms_addr, buf, sizeof(buf));
! 		printf("tei %u/%u ms_addr %s %u", pdp.u.v1.i_tei,
! 			pdp.u.v1.o_tei, buf, pdp.bearer_id);
  	}
  	inet_ntop(AF_INET, &pdp.sgsn_addr, buf, sizeof(buf));
  	printf("sgsn_addr %s\n", buf);
diff -rcNP libgtpnl.orig/src/internal.h libgtpnl/src/internal.h
*** libgtpnl.orig/src/internal.h	2017-02-10 09:32:01.364220048 +0100
--- libgtpnl/src/internal.h	2017-02-10 10:13:20.502716446 +0100
***************
*** 17,22 ****
--- 17,23 ----
  	uint32_t	ifidx;
  	struct in_addr	ms_addr;
  	struct in_addr	sgsn_addr;
+ 	uint8_t		bearer_id;
  	int		gtp_version;
  	union {
  		struct {
diff -rcNP libgtpnl.orig/src/libgtpnl.map libgtpnl/src/libgtpnl.map
*** libgtpnl.orig/src/libgtpnl.map	2017-02-10 09:32:01.364220048 +0100
--- libgtpnl/src/libgtpnl.map	2017-02-08 12:52:39.827732728 +0100
***************
*** 19,24 ****
--- 19,25 ----
    gtp_tunnel_set_ifidx;
    gtp_tunnel_set_ms_ip4;
    gtp_tunnel_set_sgsn_ip4;
+   gtp_tunnel_set_bearer_id;
    gtp_tunnel_set_version;
    gtp_tunnel_set_tid;
    gtp_tunnel_set_flowid;
***************
*** 28,33 ****
--- 29,35 ----
    gtp_tunnel_get_ifidx;
    gtp_tunnel_get_ms_ip4;
    gtp_tunnel_get_sgsn_ip4;
+   gtp_tunnel_get_bearer_id;
    gtp_tunnel_get_version;
    gtp_tunnel_get_tid;
    gtp_tunnel_get_flowid;
